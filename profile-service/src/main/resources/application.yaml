server:
  port: 8082
  servlet:
    context-path: /profile
spring:
    application:
        name: profile-service
    neo4j:
      uri: bolt://localhost:7687
      authentication:
        username: ${NEO4J_USERNAME}
        password: ${NEO4J_PASSWORD}

        # --- Cấu hình Kafka ---
    kafka:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      consumer:
        group-id: profile-service-group
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          # Cấu hình quan trọng nhất để giải mã Avro
        value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
        properties:
            # Địa chỉ của Schema Registry
          schema.registry.url: http://localhost:8081 # <-- Thay bằng địa chỉ Schema Registry của bạn
            # Báo cho deserializer biết rằng bạn muốn nhận đối tượng Avro cụ thể (SpecificRecord)
          specific.avro.reader: true
      producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

      listener:
        type: batch
        ack-mode: manual_immediate
        missing-topics-fatal: false
        dlt:
          enabled: true
          suffix: .dlt # Tự động tạo topic DLT với hậu tố .dlt
          producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
                    # Khi gửi message lỗi vào DLT, chúng ta muốn gửi nguyên bản payload (dạng byte[])
                    # mà không cần chuyển đổi, do đó dùng ByteArraySerializer.
            value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer